{"version":3,"file":"TradingView-DpHUxMOv.js","sources":["../../node_modules/.pnpm/bootstrap-vue-next@0.26.22_@vueuse+core@12.5.0_typescript@5.7.3__vue-router@4.5.0_vue@3.5.13__v6mn63uvghfe25zbniwvobeyky/node_modules/bootstrap-vue-next/dist/BTabs.vue_vue_type_script_setup_true_lang-CtDZ3QUO.mjs","../../src/components/ftbot/PairLockList.vue","../../src/components/ftbot/BotPerformance.vue","../../src/components/ftbot/BotProfit.vue","../../src/components/ftbot/BotStatus.vue","../../src/components/ftbot/BotControls.vue","../../src/views/TradingView.vue"],"sourcesContent":["import { defineComponent, mergeModels, useSlots, useModel, inject, ref, useTemplateRef, useAttrs, computed, onMounted, onUnmounted, watch, openBlock, createBlock, resolveDynamicComponent, unref, mergeProps, withCtx, renderSlot, createCommentVNode, nextTick, provide, toRef, normalizeClass, createVNode, createElementVNode, createElementBlock, Fragment, renderList, withKeys, withModifiers, createTextVNode, toDisplayString } from \"vue\";\nimport { u as useId } from \"./useId-c2wnQbyL.mjs\";\nimport { u as useDefaults } from \"./useDefaults-BTLXvYhO.mjs\";\nimport { q as tabsInjectionKey } from \"./keys-41Cw9q6f.mjs\";\nimport { B as BvEvent } from \"./classes-IC0yVJlq.mjs\";\nimport { u as useAlignment } from \"./useAlignment-Cw-9AVid.mjs\";\nimport { f as createReusableTemplate } from \"./index-Bkyn4R9C.mjs\";\nconst _sfc_main$1 = /* @__PURE__ */ defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BTab\",\n  props: /* @__PURE__ */ mergeModels({\n    buttonId: { default: void 0 },\n    disabled: { type: Boolean, default: false },\n    id: { default: void 0 },\n    lazy: { type: Boolean, default: void 0 },\n    lazyOnce: { type: Boolean, default: void 0 },\n    noBody: { type: Boolean, default: false },\n    tag: { default: \"div\" },\n    title: { default: void 0 },\n    titleItemClass: { default: void 0 },\n    titleLinkAttrs: { default: void 0 },\n    titleLinkClass: { default: void 0 }\n  }, {\n    \"active\": { type: Boolean, ...{\n      default: false\n    } },\n    \"activeModifiers\": {}\n  }),\n  emits: [\"update:active\"],\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BTab\");\n    const slots = useSlots();\n    const activeModel = useModel(__props, \"active\");\n    const parentData = inject(tabsInjectionKey, null);\n    const computedId = useId(() => props.id, \"tabpane\");\n    const computedButtonId = useId(() => props.buttonId, \"tab\");\n    const lazyRenderCompleted = ref(false);\n    const el = useTemplateRef(\"_el\");\n    const { onClick, ...attrs } = useAttrs();\n    const tab = computed(\n      () => ({\n        id: computedId.value,\n        buttonId: computedButtonId.value,\n        disabled: props.disabled,\n        title: props.title,\n        titleComponent: slots.title,\n        titleItemClass: () => props.titleItemClass,\n        titleLinkAttrs: () => props.titleLinkAttrs,\n        titleLinkClass: () => props.titleLinkClass,\n        onClick,\n        el: el.value\n      })\n    );\n    onMounted(() => {\n      if (!parentData) return;\n      parentData.registerTab(tab);\n      if (activeModel.value) {\n        parentData.activateTab(computedId.value);\n      }\n    });\n    onUnmounted(() => {\n      if (!parentData) return;\n      parentData.unregisterTab(computedId.value);\n    });\n    const isActive = computed(() => (parentData == null ? void 0 : parentData.activeId.value) === computedId.value);\n    const show = ref(isActive.value);\n    const computedLazy = computed(() => !!((parentData == null ? void 0 : parentData.lazy.value) || (props.lazyOnce ?? props.lazy)));\n    const computedLazyOnce = computed(() => props.lazyOnce !== void 0);\n    const computedActive = computed(() => isActive.value && !props.disabled);\n    const showSlot = computed(\n      () => computedActive.value || !computedLazy.value || computedLazy.value && computedLazyOnce.value && lazyRenderCompleted.value\n    );\n    watch(isActive, (active) => {\n      if (active) {\n        activeModel.value = true;\n        setTimeout(() => {\n          show.value = true;\n        }, 0);\n        return;\n      }\n      show.value = false;\n      activeModel.value = false;\n    });\n    watch(activeModel, (active) => {\n      if (!parentData) return;\n      if (!active) {\n        if (isActive.value) {\n          parentData.activateTab(void 0);\n        }\n        return;\n      }\n      parentData.activateTab(computedId.value);\n    });\n    const computedClasses = computed(() => [\n      {\n        \"active\": isActive.value,\n        \"show\": show.value,\n        \"card-body\": (parentData == null ? void 0 : parentData.card.value) && props.noBody === false,\n        \"fade\": !(parentData == null ? void 0 : parentData.noFade.value)\n      },\n      show.value ? parentData == null ? void 0 : parentData.activeTabClass.value : parentData == null ? void 0 : parentData.inactiveTabClass.value,\n      parentData == null ? void 0 : parentData.tabClass.value\n    ]);\n    watch(showSlot, (shown) => {\n      if (shown && !lazyRenderCompleted.value) lazyRenderCompleted.value = true;\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), mergeProps({\n        id: unref(computedId),\n        ref: \"_el\",\n        class: [\"tab-pane\", computedClasses.value],\n        role: \"tabpanel\",\n        \"aria-labelledby\": unref(computedButtonId)\n      }, attrs), {\n        default: withCtx(() => [\n          showSlot.value ? renderSlot(_ctx.$slots, \"default\", { key: 0 }) : createCommentVNode(\"\", true)\n        ]),\n        _: 3\n      }, 16, [\"id\", \"class\", \"aria-labelledby\"]);\n    };\n  }\n});\nconst _hoisted_1 = [\"aria-orientation\"];\nconst _hoisted_2 = [\"id\", \"aria-controls\", \"aria-selected\", \"tabindex\", \"onClick\"];\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  __name: \"BTabs\",\n  props: /* @__PURE__ */ mergeModels({\n    activeNavItemClass: { default: void 0 },\n    activeTabClass: { default: void 0 },\n    align: { default: void 0 },\n    card: { type: Boolean, default: false },\n    contentClass: { default: void 0 },\n    end: { type: Boolean, default: false },\n    fill: { type: Boolean, default: false },\n    id: { default: void 0 },\n    inactiveNavItemClass: { default: void 0 },\n    inactiveTabClass: { default: void 0 },\n    justified: { type: Boolean, default: false },\n    lazy: { type: Boolean, default: false },\n    navClass: { default: void 0 },\n    navItemClass: { default: void 0 },\n    navWrapperClass: { default: void 0 },\n    noFade: { type: Boolean, default: false },\n    noKeyNav: { type: Boolean, default: false },\n    noNavStyle: { type: Boolean, default: false },\n    pills: { type: Boolean, default: false },\n    small: { type: Boolean, default: false },\n    tag: { default: \"div\" },\n    tabClass: { default: void 0 },\n    underline: { type: Boolean, default: false },\n    vertical: { type: Boolean, default: false }\n  }, {\n    \"modelValue\": {\n      default: -1\n    },\n    \"modelModifiers\": {},\n    \"activeId\": {\n      default: void 0\n    },\n    \"activeIdModifiers\": {}\n  }),\n  emits: /* @__PURE__ */ mergeModels([\"activate-tab\", \"click\"], [\"update:modelValue\", \"update:activeId\"]),\n  setup(__props, { emit: __emit }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BTabs\");\n    const emit = __emit;\n    const modelValue = useModel(__props, \"modelValue\");\n    const activeId = useModel(__props, \"activeId\");\n    const ReusableEmptyTab = createReusableTemplate();\n    const tabsInternal = ref([]);\n    const tabs = computed(\n      () => tabsInternal.value.map((_tab) => {\n        const tab = unref(_tab);\n        const active = tab.id === activeId.value;\n        return {\n          ...tab,\n          active,\n          navItemClasses: [\n            {\n              active,\n              disabled: tab.disabled\n            },\n            active ? props.activeNavItemClass : props.inactiveNavItemClass,\n            props.navItemClass\n          ]\n        };\n      })\n    );\n    const showEmpty = computed(() => !((tabs == null ? void 0 : tabs.value) && tabs.value.length > 0));\n    const computedClasses = computed(() => ({\n      \"d-flex\": props.vertical,\n      \"align-items-start\": props.vertical\n    }));\n    const alignment = useAlignment(() => props.align);\n    const navTabsClasses = computed(() => ({\n      \"nav-pills\": props.pills,\n      \"nav-underline\": props.underline,\n      \"flex-column me-3\": props.vertical,\n      [alignment.value]: props.align !== void 0,\n      \"nav-fill\": props.fill,\n      \"card-header-tabs\": props.card && !props.pills && !props.underline,\n      \"card-header-pills\": props.card && props.pills,\n      \"nav-justified\": props.justified,\n      \"nav-tabs\": !props.noNavStyle && !props.pills && !props.underline,\n      \"small\": props.small\n    }));\n    const activateTab = (index) => {\n      var _a;\n      if (index !== void 0) {\n        const id = (_a = tabs.value[index]) == null ? void 0 : _a.id;\n        if (index > -1 && index < tabs.value.length && !tabs.value[index].disabled && (modelValue.value < 0 || activeId.value !== id || modelValue.value !== index)) {\n          const tabEvent = new BvEvent(\"activate-tab\", { cancelable: true });\n          emit(\"activate-tab\", index, modelValue.value, tabEvent);\n          if (!tabEvent.defaultPrevented) {\n            if (activeId.value !== id) activeId.value = id;\n            if (modelValue.value !== index) modelValue.value = index;\n          }\n        }\n      }\n    };\n    const handleClick = (event, index) => {\n      var _a, _b, _c;\n      activateTab(index);\n      if (index >= 0 && !tabs.value[index].disabled && ((_a = tabs.value[index]) == null ? void 0 : _a.onClick) && typeof tabs.value[index].onClick === \"function\") {\n        (_c = (_b = tabs.value[index]).onClick) == null ? void 0 : _c.call(_b, event);\n      }\n    };\n    const keynav = (e, direction) => {\n      var _a, _b;\n      if (tabs.value.length <= 0 || props.noKeyNav) return;\n      e.preventDefault();\n      e.stopPropagation();\n      modelValue.value = nextIndex(modelValue.value + direction, direction);\n      (_b = document.getElementById((_a = tabs.value[modelValue.value]) == null ? void 0 : _a.buttonId)) == null ? void 0 : _b.focus();\n    };\n    const nextIndex = (start, direction) => {\n      let index = start;\n      let minIdx = -1;\n      let maxIdx = -1;\n      for (let i = 0; i < tabs.value.length; i++) {\n        if (!tabs.value[i].disabled) {\n          if (minIdx === -1) minIdx = i;\n          maxIdx = i;\n        }\n      }\n      while (index >= minIdx && index <= maxIdx && tabs.value[index].disabled) {\n        index += direction;\n      }\n      if (index < minIdx) index = minIdx;\n      if (index > maxIdx) index = maxIdx;\n      return index;\n    };\n    watch(modelValue, (newValue, oldValue) => {\n      if (newValue === oldValue) return;\n      if (tabs.value.length <= 0) {\n        return;\n      }\n      const index = nextIndex(newValue, newValue > oldValue ? 1 : -1);\n      nextTick(() => {\n        activateTab(index);\n      });\n    });\n    watch(activeId, (newValue, oldValue) => {\n      const index = tabs.value.findIndex((t) => t.id === newValue);\n      if (newValue === oldValue) return;\n      if (tabs.value.length <= 0) {\n        return;\n      }\n      if (index === -1) {\n        activateTab(nextIndex(0, 1));\n        return;\n      }\n      activateTab(index);\n    });\n    const registerTab = (tab) => {\n      if (!tabsInternal.value.find((t) => t.value.id === tab.value.id)) {\n        tabsInternal.value.push(tab);\n      } else {\n        tabsInternal.value[tabsInternal.value.findIndex((t) => t.value.id === tab.value.id)] = tab;\n      }\n      tabsInternal.value.sort((a, b) => {\n        if (!Node || !a.value.el || !b.value.el) return 0;\n        const position = a.value.el.compareDocumentPosition(b.value.el);\n        if (position & Node.DOCUMENT_POSITION_FOLLOWING) return -1;\n        if (position & Node.DOCUMENT_POSITION_PRECEDING) return 1;\n        return 0;\n      });\n    };\n    const unregisterTab = (id) => {\n      tabsInternal.value = tabsInternal.value.filter((t) => t.value.id !== id);\n    };\n    watch(\n      tabsInternal,\n      () => {\n        findActive();\n      },\n      { deep: true }\n    );\n    const findActive = () => {\n      var _a;\n      if (tabs.value.length === 0) {\n        modelValue.value = -1;\n        activeId.value = void 0;\n        return;\n      }\n      if (modelValue.value >= 0 && !activeId.value) {\n        activeId.value = (_a = tabs.value[modelValue.value]) == null ? void 0 : _a.id;\n      }\n      if (tabs.value.find((t) => t.id === activeId.value)) {\n        activateTab(tabs.value.findIndex((t) => t.id === activeId.value));\n        return;\n      }\n      activateTab(tabs.value.map((tab) => !tab.disabled).indexOf(true));\n    };\n    provide(tabsInjectionKey, {\n      lazy: toRef(() => props.lazy),\n      card: toRef(() => props.card),\n      noFade: toRef(() => props.noFade),\n      activeTabClass: toRef(() => props.activeTabClass),\n      inactiveTabClass: toRef(() => props.inactiveTabClass),\n      tabClass: toRef(() => props.tabClass),\n      registerTab,\n      unregisterTab,\n      activeId,\n      activateTab: (id) => {\n        const idx = tabs.value.findIndex((t) => t.id === id);\n        if (id === void 0 || idx === -1) {\n          activateTab(nextIndex(0, 1));\n          return;\n        }\n        activateTab(idx);\n      }\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {\n        id: unref(props).id,\n        class: normalizeClass([\"tabs\", computedClasses.value])\n      }, {\n        default: withCtx(() => [\n          createVNode(unref(ReusableEmptyTab).define, null, {\n            default: withCtx(() => [\n              createElementVNode(\"div\", {\n                class: normalizeClass([\"tab-content\", unref(props).contentClass])\n              }, [\n                renderSlot(_ctx.$slots, \"default\"),\n                showEmpty.value ? (openBlock(), createElementBlock(\"div\", {\n                  key: \"bv-empty-tab\",\n                  class: normalizeClass([\"tab-pane active\", { \"card-body\": unref(props).card }])\n                }, [\n                  renderSlot(_ctx.$slots, \"empty\")\n                ], 2)) : createCommentVNode(\"\", true)\n              ], 2)\n            ]),\n            _: 3\n          }),\n          unref(props).end ? (openBlock(), createBlock(unref(ReusableEmptyTab).reuse, { key: 0 })) : createCommentVNode(\"\", true),\n          createElementVNode(\"div\", {\n            class: normalizeClass([\n              unref(props).navWrapperClass,\n              { \"card-header\": unref(props).card, \"ms-auto\": _ctx.vertical && unref(props).end }\n            ])\n          }, [\n            createElementVNode(\"ul\", {\n              class: normalizeClass([\"nav\", [navTabsClasses.value, unref(props).navClass]]),\n              role: \"tablist\",\n              \"aria-orientation\": unref(props).vertical ? \"vertical\" : \"horizontal\"\n            }, [\n              renderSlot(_ctx.$slots, \"tabs-start\"),\n              (openBlock(true), createElementBlock(Fragment, null, renderList(tabs.value, (tab, idx) => {\n                var _a, _b, _c;\n                return openBlock(), createElementBlock(\"li\", {\n                  key: tab.id,\n                  class: normalizeClass([\"nav-item\", (_a = tab.titleItemClass) == null ? void 0 : _a.call(tab)]),\n                  role: \"presentation\"\n                }, [\n                  createElementVNode(\"button\", mergeProps({\n                    id: tab.buttonId,\n                    class: [\"nav-link\", [tab.navItemClasses, (_b = tab.titleLinkClass) == null ? void 0 : _b.call(tab)]],\n                    role: \"tab\",\n                    \"aria-controls\": tab.id,\n                    \"aria-selected\": tab.active,\n                    tabindex: unref(props).noKeyNav ? void 0 : tab.active ? void 0 : -1,\n                    ref_for: true\n                  }, (_c = tab.titleLinkAttrs) == null ? void 0 : _c.call(tab), {\n                    onKeydown: [\n                      _cache[0] || (_cache[0] = withKeys(withModifiers(($event) => !unref(props).vertical && keynav($event, -1), [\"exact\"]), [\"left\"])),\n                      _cache[1] || (_cache[1] = withKeys(withModifiers(($event) => !unref(props).vertical && keynav($event, -999), [\"shift\"]), [\"left\"])),\n                      _cache[2] || (_cache[2] = withKeys(withModifiers(($event) => unref(props).vertical && keynav($event, -1), [\"exact\"]), [\"up\"])),\n                      _cache[3] || (_cache[3] = withKeys(withModifiers(($event) => unref(props).vertical && keynav($event, -999), [\"shift\"]), [\"up\"])),\n                      _cache[4] || (_cache[4] = withKeys(withModifiers(($event) => !unref(props).vertical && keynav($event, 1), [\"exact\"]), [\"right\"])),\n                      _cache[5] || (_cache[5] = withKeys(withModifiers(($event) => !unref(props).vertical && keynav($event, 999), [\"shift\"]), [\"right\"])),\n                      _cache[6] || (_cache[6] = withKeys(withModifiers(($event) => unref(props).vertical && keynav($event, 1), [\"exact\"]), [\"down\"])),\n                      _cache[7] || (_cache[7] = withKeys(withModifiers(($event) => unref(props).vertical && keynav($event, 999), [\"shift\"]), [\"down\"])),\n                      _cache[8] || (_cache[8] = withKeys(($event) => keynav($event, -999), [\"page-up\"])),\n                      _cache[9] || (_cache[9] = withKeys(($event) => keynav($event, 999), [\"page-down\"])),\n                      _cache[10] || (_cache[10] = withKeys(($event) => keynav($event, -999), [\"home\"])),\n                      _cache[11] || (_cache[11] = withKeys(($event) => keynav($event, 999), [\"end\"]))\n                    ],\n                    onClick: withModifiers((e) => handleClick(e, idx), [\"stop\", \"prevent\"])\n                  }), [\n                    tab.titleComponent ? (openBlock(), createBlock(resolveDynamicComponent(tab.titleComponent), { key: 0 })) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [\n                      createTextVNode(toDisplayString(tab.title), 1)\n                    ], 64))\n                  ], 16, _hoisted_2)\n                ], 2);\n              }), 128)),\n              renderSlot(_ctx.$slots, \"tabs-end\")\n            ], 10, _hoisted_1)\n          ], 2),\n          !unref(props).end ? (openBlock(), createBlock(unref(ReusableEmptyTab).reuse, { key: 1 })) : createCommentVNode(\"\", true)\n        ]),\n        _: 3\n      }, 8, [\"id\", \"class\"]);\n    };\n  }\n});\nexport {\n  _sfc_main$1 as _,\n  _sfc_main as a\n};\n//# sourceMappingURL=BTabs.vue_vue_type_script_setup_true_lang-CtDZ3QUO.mjs.map\n","<script setup lang=\"ts\">\nimport type { Lock } from '@/types';\n\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport type { TableField } from 'bootstrap-vue-next';\nconst botStore = useBotStore();\n\nconst tableFields: TableField[] = [\n  { key: 'pair', label: 'Pair' },\n  { key: 'lock_end_timestamp', label: 'Until', formatter: (value) => timestampms(value as number) },\n  { key: 'reason', label: 'Reason' },\n  { key: 'actions' },\n];\n\nconst removePairLock = (item: Lock) => {\n  console.log(item);\n  if (item.id !== undefined) {\n    botStore.activeBot.deleteLock(item.id);\n  } else {\n    showAlert('This Freqtrade version does not support deleting locks.');\n  }\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"mb-2\">\n      <label class=\"me-auto h3\">Pair Locks</label>\n      <BButton class=\"float-end\" size=\"sm\" @click=\"botStore.activeBot.getLocks\">\n        <i-mdi-refresh />\n      </BButton>\n    </div>\n    <div>\n      <BTable class=\"table-sm\" :items=\"botStore.activeBot.activeLocks\" :fields=\"tableFields\">\n        <template #cell(actions)=\"row\">\n          <BButton\n            class=\"btn-xs ms-1\"\n            size=\"sm\"\n            title=\"Delete trade\"\n            @click=\"removePairLock(row.item as unknown as Lock)\"\n          >\n            <i-mdi-delete />\n          </BButton>\n        </template>\n      </BTable>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport type { TableField } from 'bootstrap-vue-next';\n\nconst botStore = useBotStore();\nenum PerformanceOptions {\n  performance = 'performance',\n  entryStats = 'entryStats',\n  exitStats = 'exitStats',\n  mixTagStats = 'mixTagStats',\n}\nconst selectedOption = ref<PerformanceOptions>(PerformanceOptions.performance);\n\nfunction formatTextLen(text: string, len: number) {\n  if (text.length > len) {\n    return text.substring(0, len) + '...';\n  }\n  return text;\n}\n\nconst performanceTable = computed<TableField[]>(() => {\n  const textLength = 17;\n  const initialCol = {\n    [PerformanceOptions.performance]: { key: 'pair', label: 'Pair' },\n    [PerformanceOptions.entryStats]: {\n      key: 'enter_tag',\n      label: 'Enter tag',\n      formatter: (v: unknown) => formatTextLen(v as string, textLength),\n    },\n    [PerformanceOptions.exitStats]: {\n      key: 'exit_reason',\n      label: 'Exit Reason',\n      formatter: (v: unknown) => formatTextLen(v as string, textLength),\n    },\n    [PerformanceOptions.mixTagStats]: {\n      key: 'mix_tag',\n      label: 'Mix Tag',\n      formatter: (v: unknown) => formatTextLen(v as string, textLength),\n    },\n  };\n  return [\n    initialCol[selectedOption.value],\n    { key: 'profit', label: 'Profit %' },\n    {\n      key: 'profit_abs',\n      label: `Profit ${botStore.activeBot.botState?.stake_currency}`,\n      formatter: (v: unknown) => formatPrice(v as number, 5),\n    },\n    { key: 'count', label: 'Count' },\n  ];\n});\n\nconst performanceData = computed(() => {\n  if (selectedOption.value === PerformanceOptions.performance) {\n    return botStore.activeBot.performanceStats;\n  }\n  if (selectedOption.value === PerformanceOptions.entryStats) {\n    return botStore.activeBot.entryStats;\n  }\n  if (selectedOption.value === PerformanceOptions.exitStats) {\n    return botStore.activeBot.exitStats;\n  }\n  if (selectedOption.value === PerformanceOptions.mixTagStats) {\n    return botStore.activeBot.mixTagStats;\n  }\n  return [];\n});\n\nconst hasAdvancedStats = computed(() => botStore.activeBot.botApiVersion >= 2.34);\n\nconst options = [\n  { value: PerformanceOptions.performance, text: 'Performance' },\n  { value: PerformanceOptions.entryStats, text: 'Entries' },\n  { value: PerformanceOptions.exitStats, text: 'Exits' },\n  { value: PerformanceOptions.mixTagStats, text: 'Mix Tag' },\n];\n\nfunction refreshSummary() {\n  if (selectedOption.value === PerformanceOptions.performance) {\n    botStore.activeBot.getPerformance();\n  }\n  if (selectedOption.value === PerformanceOptions.entryStats) {\n    botStore.activeBot.getEntryStats();\n  }\n  if (selectedOption.value === PerformanceOptions.exitStats) {\n    botStore.activeBot.getExitStats();\n  }\n  if (selectedOption.value === PerformanceOptions.mixTagStats) {\n    botStore.activeBot.getMixTagStats();\n  }\n}\n\nonMounted(() => {\n  refreshSummary();\n});\n</script>\n<template>\n  <div>\n    <div class=\"mb-2\">\n      <h3 class=\"me-auto d-inline\">Performance</h3>\n      <BButton class=\"float-end\" size=\"sm\" @click=\"refreshSummary\">\n        <i-mdi-refresh />\n      </BButton>\n    </div>\n    <BFormRadioGroup\n      v-if=\"hasAdvancedStats\"\n      id=\"order-direction\"\n      v-model=\"selectedOption\"\n      :options=\"options\"\n      name=\"radios-btn-default\"\n      size=\"sm\"\n      buttons\n      style=\"min-width: 10em\"\n      button-variant=\"outline-primary\"\n      @change=\"refreshSummary\"\n    ></BFormRadioGroup>\n    <BTable class=\"table-sm\" :items=\"performanceData\" :fields=\"performanceTable\"></BTable>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { ProfitInterface } from '@/types';\nimport type { TableField, TableItem } from 'bootstrap-vue-next';\n\nconst props = defineProps({\n  profit: { required: true, type: Object as () => ProfitInterface },\n  stakeCurrency: { required: true, type: String },\n  stakeCurrencyDecimals: { required: true, type: Number },\n});\n\nconst profitFields: TableField[] = [\n  { key: 'metric', label: 'Metric' },\n  { key: 'value', label: 'Value' },\n];\n\nconst profitItems = computed<TableItem[]>(() => {\n  if (!props.profit) return [];\n  return [\n    {\n      metric: 'ROI closed trades',\n      value: props.profit.profit_closed_coin\n        ? `${formatPriceCurrency(\n            props.profit.profit_closed_coin,\n            props.stakeCurrency,\n            props.stakeCurrencyDecimals,\n          )} (${formatPercent(props.profit.profit_closed_ratio_mean, 2)})`\n        : 'N/A',\n      // (&sum; ${formatPercent(props.profit.profit_closed_ratio_sum,  2,)})`\n    },\n    {\n      metric: 'ROI all trades',\n      value: props.profit.profit_all_coin\n        ? `${formatPriceCurrency(\n            props.profit.profit_all_coin,\n            props.stakeCurrency,\n            props.stakeCurrencyDecimals,\n          )} (${formatPercent(props.profit.profit_all_ratio_mean, 2)})`\n        : 'N/A',\n      //  (&sum; ${formatPercent(props.profit.profit_all_ratio_sum,2,)})`\n    },\n\n    {\n      metric: 'Total Trade count',\n      value: `${props.profit.trade_count ?? 0}`,\n    },\n    {\n      metric: 'Bot started',\n      value: props.profit.bot_start_timestamp,\n      isTs: true,\n    },\n    {\n      metric: 'First Trade opened',\n      value: props.profit.first_trade_timestamp,\n      isTs: true,\n    },\n    {\n      metric: 'Latest Trade opened',\n      value: props.profit.latest_trade_timestamp,\n      isTs: true,\n    },\n    {\n      metric: 'Win / Loss',\n      value: `${props.profit.winning_trades ?? 0} / ${props.profit.losing_trades ?? 0}`,\n    },\n    {\n      metric: 'Winrate',\n      value: `${props.profit.winrate ? formatPercent(props.profit.winrate) : 'N/A'}`,\n    },\n    {\n      metric: 'Expectancy (ratio)',\n      value: `${props.profit.expectancy ? props.profit.expectancy.toFixed(2) : 'N/A'} (${\n        props.profit.expectancy_ratio ? props.profit.expectancy_ratio.toFixed(2) : 'N/A'\n      })`,\n    },\n    {\n      metric: 'Avg. Duration',\n      value: `${props.profit.avg_duration ?? 'N/A'}`,\n    },\n    {\n      metric: 'Best performing',\n      value: props.profit.best_pair\n        ? `${props.profit.best_pair}: ${formatPercent(props.profit.best_pair_profit_ratio, 2)}`\n        : 'N/A',\n    },\n    {\n      metric: 'Trading volume',\n      value: `${formatPriceCurrency(\n        props.profit.trading_volume ?? 0,\n        props.stakeCurrency,\n        props.stakeCurrencyDecimals,\n      )}`,\n    },\n    {\n      metric: 'Profit factor',\n      value: `${props.profit.profit_factor ? props.profit.profit_factor.toFixed(2) : 'N/A'}`,\n    },\n    {\n      metric: 'Max Drawdown',\n      value: `${props.profit.max_drawdown ? formatPercent(props.profit.max_drawdown, 2) : 'N/A'} (${\n        props.profit.max_drawdown_abs\n          ? formatPriceCurrency(\n              props.profit.max_drawdown_abs,\n              props.stakeCurrency,\n              props.stakeCurrencyDecimals,\n            )\n          : 'N/A'\n      }) ${\n        props.profit.max_drawdown_start_timestamp && props.profit.max_drawdown_end_timestamp\n          ? 'from ' +\n            timestampms(props.profit.max_drawdown_start_timestamp) +\n            ' to ' +\n            timestampms(props.profit.max_drawdown_end_timestamp)\n          : ''\n      }`,\n    },\n  ];\n});\n</script>\n\n<template>\n  <BTable class=\"text-start\" small borderless :items=\"profitItems\" :fields=\"profitFields\">\n    <template #cell(value)=\"row\">\n      <DateTimeTZ v-if=\"row.item.isTs && row.value\" :date=\"row.value as number\"></DateTimeTZ>\n      <template v-else>{{ row.value }}</template>\n    </template>\n  </BTable>\n</template>\n","<script setup lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nconst botStore = useBotStore();\n</script>\n\n<template>\n  <div v-if=\"botStore.activeBot.botState\">\n    <p>\n      Running Freqtrade <strong>{{ botStore.activeBot.version }}</strong>\n    </p>\n    <p>\n      Running with\n      <strong>\n        {{ botStore.activeBot.botState.max_open_trades }}x{{\n          botStore.activeBot.botState.stake_amount\n        }}\n        {{ botStore.activeBot.botState.stake_currency }}\n      </strong>\n      on\n      <strong>{{ botStore.activeBot.botState.exchange }}</strong> in\n      <strong>{{ botStore.activeBot.botState.trading_mode || 'spot' }}</strong> markets, with\n      Strategy <strong>{{ botStore.activeBot.botState.strategy }}</strong\n      >.\n    </p>\n    <p v-if=\"'stoploss_on_exchange' in botStore.activeBot.botState\">\n      Stoploss on exchange is\n      <strong>{{\n        botStore.activeBot.botState.stoploss_on_exchange ? 'enabled' : 'disabled'\n      }}</strong\n      >.\n    </p>\n    <p>\n      Currently <strong>{{ botStore.activeBot.botState.state }}</strong\n      >,\n      <strong>force entry: {{ botStore.activeBot.botState.force_entry_enable }}</strong>\n    </p>\n    <p>\n      <strong>{{ botStore.activeBot.botState.dry_run ? 'Dry-Run' : 'Live' }}</strong>\n    </p>\n    <hr />\n    <p>\n      Avg Profit {{ formatPercent(botStore.activeBot.profit.profit_all_ratio_mean) }} (&sum;\n      {{ formatPercent(botStore.activeBot.profit.profit_all_ratio_sum) }}) in\n      {{ botStore.activeBot.profit.trade_count }} Trades, with an average duration of\n      {{ botStore.activeBot.profit.avg_duration }}. Best pair:\n      {{ botStore.activeBot.profit.best_pair }}.\n    </p>\n    <p v-if=\"botStore.activeBot.profit.first_trade_timestamp\">\n      <span v-if=\"botStore.activeBot.profit.bot_start_timestamp\" class=\"d-block\">\n        Bot start date:\n        <strong>\n          <DateTimeTZ :date=\"botStore.activeBot.profit.bot_start_timestamp\" show-timezone />\n        </strong>\n      </span>\n      <span class=\"d-block\">\n        First trade opened:\n        <strong>\n          <DateTimeTZ :date=\"botStore.activeBot.profit.first_trade_timestamp\" show-timezone />\n        </strong>\n      </span>\n      <span class=\"d-block\">\n        Last trade opened:\n        <strong>\n          <DateTimeTZ :date=\"botStore.activeBot.profit.latest_trade_timestamp\" show-timezone />\n        </strong>\n      </span>\n    </p>\n    <p>\n      <span v-if=\"botStore.activeBot.profit.profit_factor\" class=\"d-block\">\n        Profit factor:\n        {{ botStore.activeBot.profit.profit_factor.toFixed(2) }}\n      </span>\n      <span v-if=\"botStore.activeBot.profit.trading_volume\" class=\"d-block\">\n        Trading volume:\n        {{\n          formatPriceCurrency(\n            botStore.activeBot.profit.trading_volume,\n            botStore.activeBot.botState.stake_currency,\n            botStore.activeBot.botState.stake_currency_decimals ?? 3,\n          )\n        }}\n      </span>\n    </p>\n    <BotProfit\n      class=\"mx-1\"\n      :profit=\"botStore.activeBot.profit\"\n      :stake-currency=\"botStore.activeBot.botState.stake_currency ?? 'USDT'\"\n      :stake-currency-decimals=\"botStore.activeBot.botState.stake_currency_decimals ?? 3\"\n    />\n  </div>\n</template>\n","forceexit\n<script setup lang=\"ts\">\nimport type { MsgBoxObject } from '@/components/general/MessageBox.vue';\nimport MessageBox from '@/components/general/MessageBox.vue';\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport type { ForceSellPayload } from '@/types';\n\nimport ForceEntryForm from './ForceEntryForm.vue';\n\nconst botStore = useBotStore();\nconst forceEnter = ref<boolean>(false);\nconst msgBox = ref<typeof MessageBox>();\n\nconst isRunning = computed((): boolean => {\n  return botStore.activeBot.botState?.state === 'running';\n});\n\nconst handleStopBot = () => {\n  const msg: MsgBoxObject = {\n    title: 'Stop Bot',\n    message: 'Stop the bot loop from running?',\n    accept: () => {\n      botStore.activeBot.stopBot();\n    },\n  };\n  msgBox.value?.show(msg);\n};\n\nconst handleStopBuy = () => {\n  const msg: MsgBoxObject = {\n    title: 'Stop Buying',\n    message: 'Freqtrade will continue to handle open trades.',\n    accept: () => {\n      botStore.activeBot.stopBuy();\n    },\n  };\n  msgBox.value?.show(msg);\n};\n\nconst handleReloadConfig = () => {\n  const msg: MsgBoxObject = {\n    title: 'Reload',\n    message: 'Reload configuration (including strategy)?',\n    accept: () => {\n      console.log('reload...');\n      botStore.activeBot.reloadConfig();\n    },\n  };\n  msgBox.value?.show(msg);\n};\n\nconst handleForceExit = () => {\n  const msg: MsgBoxObject = {\n    title: 'ForceExit all',\n    message: 'Really forceexit ALL trades?',\n    accept: () => {\n      const payload: ForceSellPayload = {\n        tradeid: 'all',\n        // TODO: support ordertype (?)\n      };\n      botStore.activeBot.forceexit(payload);\n    },\n  };\n  msgBox.value?.show(msg);\n};\n</script>\n\n<template>\n  <div>\n    <button\n      class=\"btn btn-secondary btn-sm ms-1\"\n      :disabled=\"!botStore.activeBot.isTrading || isRunning\"\n      title=\"Start Trading\"\n      @click=\"botStore.activeBot.startBot()\"\n    >\n      <i-mdi-play height=\"24\" width=\"24\" />\n    </button>\n    <button\n      class=\"btn btn-secondary btn-sm ms-1\"\n      :disabled=\"!botStore.activeBot.isTrading || !isRunning\"\n      title=\"Stop Trading - Also stops handling open trades.\"\n      @click=\"handleStopBot()\"\n    >\n      <i-mdi-stop height=\"24\" width=\"24\" />\n    </button>\n    <button\n      class=\"btn btn-secondary btn-sm ms-1\"\n      :disabled=\"!botStore.activeBot.isTrading || !isRunning\"\n      title=\"StopBuy - Stops buying, but still handles open trades\"\n      @click=\"handleStopBuy()\"\n    >\n      <i-mdi-pause height=\"24\" width=\"24\" />\n    </button>\n    <button\n      class=\"btn btn-secondary btn-sm ms-1\"\n      :disabled=\"!botStore.activeBot.isTrading\"\n      title=\"Reload Config - reloads configuration including strategy, resetting all settings changed on the fly.\"\n      @click=\"handleReloadConfig()\"\n    >\n      <i-mdi-reload height=\"24\" width=\"24\" />\n    </button>\n    <button\n      class=\"btn btn-secondary btn-sm ms-1\"\n      :disabled=\"!botStore.activeBot.isTrading\"\n      title=\"Force exit all\"\n      @click=\"handleForceExit()\"\n    >\n      <i-mdi-close-box-multiple height=\"24\" width=\"24\" />\n    </button>\n    <button\n      v-if=\"botStore.activeBot.botState && botStore.activeBot.botState.force_entry_enable\"\n      class=\"btn btn-secondary btn-sm ms-1\"\n      :disabled=\"!botStore.activeBot.isTrading || !isRunning\"\n      title=\"Force enter - Immediately enter a trade at an optional price. Exits are then handled according to strategy rules.\"\n      @click=\"forceEnter = true\"\n    >\n      <i-mdi-plus-box-multiple-outline style=\"font-size: 20px\" />\n    </button>\n    <button\n      v-if=\"botStore.activeBot.isWebserverMode && false\"\n      :disabled=\"botStore.activeBot.isTrading\"\n      class=\"btn btn-secondary btn-sm ms-1\"\n      title=\"Start Trading mode\"\n      @click=\"botStore.activeBot.startTrade()\"\n    >\n      <i-mdi-play class=\"fs-4\" />\n    </button>\n    <ForceEntryForm v-model=\"forceEnter\" :pair=\"botStore.activeBot.selectedPair\" />\n    <MessageBox ref=\"msgBox\" />\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { GridItemData } from '@/types';\n\nimport { useLayoutStore, findGridLayout, TradeLayout } from '@/stores/layout';\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nconst botStore = useBotStore();\nconst layoutStore = useLayoutStore();\nconst settingsStore = useSettingsStore();\nconst currentBreakpoint = ref('');\n\nconst breakpointChanged = (newBreakpoint: string) => {\n  // console.log('breakpoint:', newBreakpoint);\n  currentBreakpoint.value = newBreakpoint;\n};\nconst isResizableLayout = computed(() =>\n  ['', 'sm', 'md', 'lg', 'xl'].includes(currentBreakpoint.value),\n);\nconst isLayoutLocked = computed(() => {\n  return layoutStore.layoutLocked || !isResizableLayout.value;\n});\nconst gridLayoutData = computed((): GridItemData[] => {\n  if (isResizableLayout.value) {\n    return layoutStore.tradingLayout;\n  }\n  return [...layoutStore.getTradingLayoutSm];\n});\n\nconst gridLayoutMultiPane = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.multiPane);\n});\n\nconst gridLayoutOpenTrades = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.openTrades);\n});\n\nconst gridLayoutTradeHistory = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.tradeHistory);\n});\n\nconst gridLayoutTradeDetail = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.tradeDetail);\n});\n\nconst gridLayoutChartView = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.chartView);\n});\n\nconst responsiveGridLayouts = computed(() => {\n  return {\n    sm: layoutStore.getTradingLayoutSm,\n  };\n});\n</script>\n\n<template>\n  <GridLayout\n    class=\"h-100 w-100\"\n    style=\"padding: 1px\"\n    :row-height=\"50\"\n    :layout=\"gridLayoutData\"\n    :vertical-compact=\"false\"\n    :margin=\"[1, 1]\"\n    :responsive-layouts=\"responsiveGridLayouts\"\n    :is-resizable=\"!isLayoutLocked\"\n    :is-draggable=\"!isLayoutLocked\"\n    :responsive=\"true\"\n    :cols=\"{ lg: 12, md: 12, sm: 12, xs: 4, xxs: 2 }\"\n    :col-num=\"12\"\n    @update:breakpoint=\"breakpointChanged\"\n  >\n    <template #default=\"{ gridItemProps }\">\n      <GridItem\n        v-if=\"gridLayoutMultiPane.h != 0\"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutMultiPane.i\"\n        :x=\"gridLayoutMultiPane.x\"\n        :y=\"gridLayoutMultiPane.y\"\n        :w=\"gridLayoutMultiPane.w\"\n        :h=\"gridLayoutMultiPane.h\"\n        drag-allow-from=\".card-header\"\n      >\n        <DraggableContainer header=\"Multi Pane\">\n          <div class=\"mt-1 d-flex justify-content-center\">\n            <BotControls class=\"mt-1 mb-2\" />\n          </div>\n          <BTabs content-class=\"mt-3 mx-1\" class=\"mt-1\">\n            <BTab title=\"Pairs combined\" active>\n              <template #title>\n                <div title=\"Pairs combined\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\"\n                    >Pairs combined</span\n                  >\n                  <i-mdi-view-list v-else />\n                </div>\n              </template>\n              <PairSummary\n                :pairlist=\"botStore.activeBot.whitelist\"\n                :current-locks=\"botStore.activeBot.activeLocks\"\n                :trades=\"botStore.activeBot.openTrades\"\n              />\n            </BTab>\n            <BTab title=\"General\">\n              <template #title>\n                <div title=\"General\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\">General</span>\n                  <i-mdi-information v-else />\n                </div>\n              </template>\n              <BotStatus />\n            </BTab>\n            <BTab title=\"Performance\" lazy>\n              <template #title>\n                <div title=\"Performance\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\"\n                    >Performance</span\n                  >\n                  <i-mdi-chart-line v-else />\n                </div>\n              </template>\n              <BotPerformance />\n            </BTab>\n            <BTab title=\"Balance\" lazy>\n              <template #title>\n                <div title=\"Balance\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\">Balance</span>\n                  <i-mdi-bank v-else />\n                </div>\n              </template>\n              <BotBalance />\n            </BTab>\n            <BTab title=\"Time Breakdown\" lazy>\n              <template #title>\n                <div title=\"Time Breakdown\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\"\n                    >Time Breakdown</span\n                  >\n                  <i-mdi-folder-clock v-else />\n                </div>\n              </template>\n              <PeriodBreakdown />\n            </BTab>\n\n            <BTab title=\"Pairlist\" lazy>\n              <template #title>\n                <div title=\"Pairlist\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\">Pairlist</span>\n                  <i-mdi-format-list-group v-else />\n                </div>\n              </template>\n              <PairListLive />\n            </BTab>\n            <BTab title=\"Pair Locks\" lazy>\n              <template #title>\n                <div title=\"Pair Locks\">\n                  <span v-if=\"settingsStore.multiPaneButtonsShowText\" class=\"ms-1\">Pair Locks</span>\n                  <i-mdi-lock-alert v-else />\n                </div>\n              </template>\n              <PairLockList />\n            </BTab>\n          </BTabs>\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-if=\"gridLayoutOpenTrades.h != 0\"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutOpenTrades.i\"\n        :x=\"gridLayoutOpenTrades.x\"\n        :y=\"gridLayoutOpenTrades.y\"\n        :w=\"gridLayoutOpenTrades.w\"\n        :h=\"gridLayoutOpenTrades.h\"\n        drag-allow-from=\".card-header\"\n      >\n        <DraggableContainer header=\"Open Trades\">\n          <TradeList\n            class=\"open-trades\"\n            :trades=\"botStore.activeBot.openTrades\"\n            title=\"Open trades\"\n            :active-trades=\"true\"\n            empty-text=\"Currently no open trades.\"\n          />\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-if=\"gridLayoutTradeHistory.h != 0\"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutTradeHistory.i\"\n        :x=\"gridLayoutTradeHistory.x\"\n        :y=\"gridLayoutTradeHistory.y\"\n        :w=\"gridLayoutTradeHistory.w\"\n        :h=\"gridLayoutTradeHistory.h\"\n        drag-allow-from=\".card-header\"\n      >\n        <DraggableContainer header=\"Closed Trades\">\n          <TradeList\n            class=\"trade-history\"\n            :trades=\"botStore.activeBot.closedTrades\"\n            title=\"Trade history\"\n            :show-filter=\"true\"\n            empty-text=\"No closed trades so far.\"\n          />\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-if=\"\n          botStore.activeBot.detailTradeId &&\n          botStore.activeBot.tradeDetail &&\n          gridLayoutTradeDetail.h != 0\n        \"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutTradeDetail.i\"\n        :x=\"gridLayoutTradeDetail.x\"\n        :y=\"gridLayoutTradeDetail.y\"\n        :w=\"gridLayoutTradeDetail.w\"\n        :h=\"gridLayoutTradeDetail.h\"\n        :min-h=\"4\"\n        drag-allow-from=\".card-header\"\n      >\n        <DraggableContainer header=\"Trade Detail\">\n          <TradeDetail\n            :trade=\"botStore.activeBot.tradeDetail\"\n            :stake-currency=\"botStore.activeBot.stakeCurrency\"\n          />\n        </DraggableContainer>\n      </GridItem>\n      <GridItem\n        v-if=\"gridLayoutTradeDetail.h != 0\"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutChartView.i\"\n        :x=\"gridLayoutChartView.x\"\n        :y=\"gridLayoutChartView.y\"\n        :w=\"gridLayoutChartView.w\"\n        :h=\"gridLayoutChartView.h\"\n        :min-h=\"6\"\n        drag-allow-from=\".card-header\"\n      >\n        <DraggableContainer header=\"Chart\">\n          <CandleChartContainer\n            :available-pairs=\"botStore.activeBot.whitelist\"\n            :historic-view=\"!!false\"\n            :timeframe=\"botStore.activeBot.timeframe\"\n            :trades=\"botStore.activeBot.allTrades\"\n          >\n          </CandleChartContainer>\n        </DraggableContainer>\n      </GridItem>\n    </template>\n  </GridLayout>\n</template>\n"],"names":["_sfc_main$1","defineComponent","mergeModels","__props","props","useDefaults","slots","useSlots","activeModel","useModel","parentData","inject","tabsInjectionKey","computedId","useId","computedButtonId","lazyRenderCompleted","ref","el","useTemplateRef","onClick","attrs","useAttrs","tab","computed","onMounted","onUnmounted","isActive","show","computedLazy","computedLazyOnce","computedActive","showSlot","watch","active","computedClasses","shown","_ctx","_cache","openBlock","createBlock","resolveDynamicComponent","unref","mergeProps","withCtx","renderSlot","createCommentVNode","_hoisted_1","_hoisted_2","_sfc_main","__emit","emit","modelValue","activeId","ReusableEmptyTab","createReusableTemplate","tabsInternal","tabs","_tab","showEmpty","alignment","useAlignment","navTabsClasses","activateTab","index","_a","id","tabEvent","BvEvent","handleClick","event","_b","_c","keynav","e","direction","nextIndex","start","minIdx","maxIdx","i","newValue","oldValue","nextTick","t","registerTab","a","b","position","unregisterTab","findActive","provide","toRef","idx","normalizeClass","createVNode","createElementVNode","createElementBlock","Fragment","renderList","withKeys","withModifiers","$event","createTextVNode","toDisplayString","botStore","useBotStore","tableFields","value","timestampms","removePairLock","item","showAlert","selectedOption","formatTextLen","text","len","performanceTable","v","formatPrice","performanceData","hasAdvancedStats","options","refreshSummary","profitFields","profitItems","formatPriceCurrency","formatPercent","forceEnter","msgBox","isRunning","handleStopBot","msg","handleStopBuy","handleReloadConfig","handleForceExit","payload","layoutStore","useLayoutStore","settingsStore","useSettingsStore","currentBreakpoint","breakpointChanged","newBreakpoint","isResizableLayout","isLayoutLocked","gridLayoutData","gridLayoutMultiPane","findGridLayout","TradeLayout","gridLayoutOpenTrades","gridLayoutTradeHistory","gridLayoutTradeDetail","gridLayoutChartView","responsiveGridLayouts"],"mappings":"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","x_google_ignoreList":[0]}